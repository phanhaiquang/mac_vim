let user_autocmd = {}
filetype indent plugin on
set ignorecase smartcase

function! Cond(cond, ...)
  let opts = get(a:000, 0, {})
  return a:cond ? opts : extend(opts, { 'on': [], 'for': [] })
endfunction

function! LoadConfig(plugin_name, config_path)
  if len(filter(values(g:plugs), 'v:val.dir =~ "' . a:plugin_name . '"'))
    exec ":so " . a:config_path
  endif
endfunction

if has('nvim')
call plug#begin('~/.config/nvim/plugged')
else
call plug#begin('~/.vim/plugged')
end
  Plug 'preservim/nerdcommenter'
  Plug 'mhartington/oceanic-next'

  Plug 'tpope/vim-haml', {'for': ['haml', 'sass', 'scss']}
  Plug 'tpope/vim-bundler', {'on': ['Bundle']}
  Plug 'tpope/vim-surround'
  Plug 'groenewege/vim-less', {'for': ['less']}
  Plug 'mattn/emmet-vim', {'for': ['html', 'eruby', 'erb', 'scss', 'css']}
  Plug 'cakebaker/scss-syntax.vim', {'for': ['scss']}
  Plug 'tpope/vim-dispatch', {'on': ['Make', 'Copen', 'Dispatch', 'Focus'], 'branch': 'job'}
  Plug 'mileszs/ack.vim', {'on': 'Ack'}
  Plug 'ecomba/vim-ruby-refactoring', {'on': ['RExtractMethod', 'RExtractLocalVariable']}
  Plug 'tpope/vim-rails', {'for': ['ruby', 'slim', 'erb']}
  Plug 'janko-m/vim-test', {'on': ['TestNearest', 'TestLast', 'TestFile']}
  Plug 'tpope/vim-sensible'
  Plug 'tpope/vim-sleuth'
  Plug 'kien/rainbow_parentheses.vim'
  Plug 'jpalardy/vim-slime', {'on': ['SlimeConfig', 'SlimeSend']}
  Plug 'dbakker/vim-projectroot'
  Plug 'slim-template/vim-slim', {'for': ['slim']}
  Plug 'Yggdroot/indentLine'
  Plug 'vim-scripts/Align', {'on': 'Align'}
  Plug 'vim-scripts/cscope.vim'
  Plug 'nachumk/systemverilog.vim', {'for': ['verilog', 'systemverilog']}
  Plug 'AndrewRadev/splitjoin.vim', {'for': ['ruby']}

  "" lint checker
  Plug 'vim-ruby/vim-ruby', {'for': ['ruby', 'slim', 'erb']}
  Plug 'tpope/vim-endwise'
  Plug 'tpope/vim-fugitive'
  Plug 'scrooloose/nerdtree', {'on': 'NERDTreeToggle'}

  "" these plugins will be loaded on custom condition
  Plug 'SirVer/ultisnips'
  Plug 'jiangmiao/auto-pairs', {'for': ['ruby', 'python', 'rust', 'dart', 'javascript', 'scss']}
  Plug 'honza/vim-snippets', {'for': ['ruby', 'python', 'rust', 'dart']}
  Plug 'vim-scripts/SyntaxComplete', {'for': ['ruby', 'python', 'rust', 'dart']}
  Plug 'pocke/rbs.vim', {'for': ['rbs']}

  Plug 'thosakwe/vim-flutter'
  Plug 'dart-lang/dart-vim-plugin'
  Plug 'isRuslan/vim-es6', {'for': ['javascript', 'jsx', 'javascript.jsx']}

  Plug 'w0rp/ale'
  if has('nvim')
    Plug 'ctrlpvim/ctrlp.vim'

    "Plug 'ervandew/supertab', {'for': ['ruby', 'python', 'rust', 'dart']}
    Plug 'github/copilot.vim'
    Plug 'nvim-lua/plenary.nvim'
    Plug 'nvim-telescope/telescope.nvim'
    Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}

    " LSP
    Plug 'williamboman/nvim-lsp-installer'
    Plug 'prabirshrestha/vim-lsp'
    Plug 'neovim/nvim-lspconfig'
    Plug 'glepnir/lspsaga.nvim'

    " COC
    Plug 'neoclide/coc.nvim', {'branch': 'release'}
    Plug 'yaegassy/coc-typeprof', {'for': ['ruby']}

    " Deoplete eco system from https://github.com/Shougo/deoplete.nvim/wiki/Completion-Sources
    Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
    Plug 'lighttiger2505/deoplete-vim-lsp'
    Plug 'wokalski/autocomplete-flow'
    Plug 'Shougo/neosnippet'
    Plug 'Shougo/neosnippet-snippets'
    Plug 'Shougo/neco-vim'
    Plug 'deoplete-plugins/deoplete-zsh'
    Plug 'deoplete-plugins/deoplete-lsp'
  else
    Plug 'itchyny/lightline.vim'
    Plug 'ctrlpvim/ctrlp.vim', {'do': ':CtrpInstall'}
    Plug 'natebosch/vim-lsc'
    Plug 'natebosch/vim-lsc-dart'
    Plug 'ervandew/supertab', {'for': ['ruby', 'python', 'rust', 'dart']}
    " do not work at Vietnam country
    "Plug 'tom-doerr/vim_codex'

    Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
    Plug 'roxma/nvim-yarp'
    Plug 'roxma/vim-hug-neovim-rpc'
  end

call plug#end()
"--------- Plugin manager end

if !has("nvim")
  set clipboard=autoselect
endif

map <D-v> :set paste<CR>:normal <D-v>:normal paste!

function! LoadConfigs()
  call LoadConfig(".", "~/.vim/mysetting/general.vim")
  call LoadConfig(".", "~/.vim/mysetting/fold.vim")
  call LoadConfig(".", "~/.vim/mysetting/unicode.vim")
  call LoadConfig(".", "~/.vim/mysetting/web.vim")
  call LoadConfig(".", "~/.vim/mysetting/function.vim")
  call LoadConfig(".", "~/.vim/mysetting/ack.vim")
  call LoadConfig(".", "~/.vim/mysetting/refresh.vim")
  call LoadConfig(".", "~/.vim/mysetting/colorstheme.vim")
  call LoadConfig(".", "~/.vim/mysetting/flow.vim")
  call LoadConfig(".", "~/.vim/mysetting/bookmark.vim")
  call LoadConfig(".", "~/.vim/mysetting/ansiesc.vim")
  call LoadConfig(".", "~/.vim/mysetting/moveline.vim")
  call LoadConfig("ctrlp", "~/.vim/mysetting/ctrlp.vim")
  call LoadConfig("Align", "~/.vim/mysetting/align.vim")
  call LoadConfig("vim-test", "~/.vim/mysetting/vim-test.vim")
  call LoadConfig("deoplete", "~/.vim/mysetting/deoplete.vim")
  call LoadConfig("telescope", "~/.vim/mysetting/telescope.vim")
  call LoadConfig("nvim-lspconfig", "~/.vim/mysetting/lsp.vim")
  call LoadConfig("lspsaga", "~/.vim/mysetting/lspsaga.vim")
  call LoadConfig("vim-rails", "~/.vim/mysetting/rails.vim")
  ""call LoadConfig("cscope", "~/.vim/mysetting/cscope.vim")
  call LoadConfig("vim-surround", "~/.vim/mysetting/surround.vim")
  call LoadConfig("ultisnips", "~/.vim/mysetting/ultisnips.vim")
  call LoadConfig("supertab", "~/.vim/mysetting/supertab.vim")
  call LoadConfig("vim-es6", "~/.vim/mysetting/javascript.vim")
  call LoadConfig("auto-pairs", "~/.vim/mysetting/auto_pairs.vim")
  call LoadConfig("emmet", "~/.vim/mysetting/emmet.vim")
  call LoadConfig("nerdcommenter", "~/.vim/mysetting/nerdcommenter.vim")
  call LoadConfig("rainbow", "~/.vim/mysetting/rainbow.vim")
  call LoadConfig("slime", "~/.vim/mysetting/slime.vim")
  call LoadConfig("indentLine", "~/.vim/mysetting/indentLine.vim")
  call LoadConfig("snippets", "~/.vim/mysetting/snippets.vim")
  call LoadConfig("ale", "~/.vim/mysetting/ale.vim")
  call LoadConfig("splitjoin", "~/.vim/mysetting/splitjoin.vim")
  call LoadConfig("fugitive", "~/.vim/mysetting/fugitive.vim")
  call LoadConfig("nerdtree", "~/.vim/mysetting/nerdtree.vim")
  call LoadConfig("flutter", "~/.vim/mysetting/flutter.vim")
  call LoadConfig("ddc.vim", "~/.vim/mysetting/ddc.vim")
  call LoadConfig("coc.nvim", "~/.vim/mysetting/coc.vim")
endfunction
:autocmd! VimEnter * call LoadConfigs()
